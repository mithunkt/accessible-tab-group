{"version":3,"sources":["components/TabPanel.tsx","components/Tabs.tsx","components/Tab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TabPanel","controlName","hidden","children","id","tabIndex","role","aria-labelledby","Tabs","name","location","useLocation","history","useHistory","useState","selectedIndex","setSelectedIndex","tabList","useEffect","hashName","urlTabName","match","join","getTabName","pathname","urlTabIndex","parseInt","replace","isNaN","React","Children","count","handleClick","event","index","handleKeyDown","newIndex","tabCount","key","undefined","focus","push","renderTabsWithProps","map","tab","isActive","cloneElement","tabName","tabRef","e","renderTabPanels","props","className","Tab","label","disabled","href","aria-selected","aria-controls","onClick","onKeyDown","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e33b4ce.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface ITabPanel {\r\n  controlName: string;\r\n  children: JSX.Element | JSX.Element[];\r\n  hidden?: boolean;\r\n}\r\n\r\nconst TabPanel = ({ controlName, hidden, children }: ITabPanel) => (\r\n  <div\r\n    id={`${controlName}-tab`}\r\n    tabIndex={0}\r\n    role=\"tabpanel\"\r\n    aria-labelledby={controlName}\r\n    hidden={hidden}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default TabPanel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport TabPanel from \"./TabPanel\";\r\nimport \"./Tabs.css\";\r\n\r\ninterface ITabs {\r\n  name: string;\r\n  children: JSX.Element | JSX.Element[];\r\n}\r\n\r\nconst Tabs = ({ name, children }: ITabs) => {\r\n  const location = useLocation();\r\n  let history = useHistory();\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const tabList: HTMLAnchorElement[] = [];\r\n\r\n  const getTabName = (hashName: string) => hashName.match(/[a-zA-Z]+/g)?.join();\r\n\r\n  const getTabIndex = (hashName: string) =>\r\n    parseInt(hashName.replace(/^\\D+/g, \"\"));\r\n\r\n  useEffect(() => {\r\n    const urlTabName = getTabName(location.pathname);\r\n    if (urlTabName && urlTabName === name) {\r\n      const urlTabIndex = getTabIndex(location.pathname);\r\n      if (\r\n        !isNaN(urlTabIndex) &&\r\n        urlTabIndex < React.Children.count(children) &&\r\n        urlTabIndex !== selectedIndex\r\n      ) {\r\n        setSelectedIndex(urlTabIndex);\r\n      }\r\n    }\r\n  }, [location, children, name, selectedIndex]);\r\n\r\n  const handleClick = (event: React.MouseEvent, index: number) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const handleKeyDown = (event: React.KeyboardEvent, index: number) => {\r\n    let newIndex;\r\n    const tabCount = React.Children.count(children);\r\n    switch (event.key) {\r\n      case \"ArrowLeft\":\r\n        newIndex = index - 1 >= 0 ? index - 1 : tabCount - 1;\r\n        break;\r\n      case \"ArrowRight\":\r\n        newIndex = index + 1 < tabCount ? index + 1 : 0;\r\n        break;\r\n      case \"Home\":\r\n        newIndex = 0;\r\n        break;\r\n      case \"End\":\r\n        newIndex = tabCount - 1;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (newIndex !== undefined) {\r\n      setSelectedIndex(newIndex);\r\n      if (tabList[newIndex]) {\r\n        tabList[newIndex].focus();\r\n        history.push(`/${name}-${newIndex}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderTabsWithProps = React.Children.map(children, (tab, index) => {\r\n    const isActive = index === selectedIndex;\r\n    const tabIndex = isActive ? 0 : -1;\r\n    const newTab = React.cloneElement(tab, {\r\n      index,\r\n      handleClick,\r\n      handleKeyDown,\r\n      tabIndex,\r\n      tabName: name,\r\n      isActive,\r\n      tabRef: (e: any) => {\r\n        tabList.push(e);\r\n      },\r\n    });\r\n\r\n    return newTab;\r\n  });\r\n\r\n  const renderTabPanels = React.Children.map(children, (tab, index) => (\r\n    <TabPanel controlName={`${name}-${index}`} hidden={index !== selectedIndex}>\r\n      {tab.props.children}\r\n    </TabPanel>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"tab-container\">\r\n      <ul role=\"tablist\">{renderTabsWithProps}</ul>\r\n      {renderTabPanels}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React from \"react\";\r\n\r\ninterface ITab {\r\n  label: string;\r\n  index?: number;\r\n  children: JSX.Element | JSX.Element[];\r\n  disabled?: boolean;\r\n  isActive?: boolean;\r\n  tabIndex?: number;\r\n  tabName?: string;\r\n  tabRef?: () => {};\r\n  handleClick?: (event: React.MouseEvent<HTMLAnchorElement>, index: number) => {};\r\n  handleKeyDown?: (event: React.KeyboardEvent<HTMLAnchorElement>, index: number) => {};\r\n}\r\n\r\nconst Tab = ({\r\n  label,\r\n  index,\r\n  disabled,\r\n  isActive,\r\n  tabIndex,\r\n  tabName,\r\n  tabRef,\r\n  handleClick,\r\n  handleKeyDown,\r\n}: ITab) => {\r\n  return (\r\n    <li role=\"presentation\">\r\n      <a\r\n        id={`${tabName}-${index}`}\r\n        href={`#${tabName}-${index}`}\r\n        role=\"tab\"\r\n        aria-selected={isActive}\r\n        aria-controls={`${tabName}-${index}-tab`}\r\n        onClick={(event) => {\r\n          if (disabled) return;\r\n          if (handleClick && index !== undefined) handleClick(event, index);\r\n        }}\r\n        onKeyDown={(event) => {\r\n          if (disabled) return;\r\n          if (handleKeyDown && index !== undefined) handleKeyDown(event, index);\r\n        }}\r\n        tabIndex={tabIndex}\r\n        ref={tabRef}\r\n      >\r\n        {label}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import React from \"react\";\nimport Tabs from \"./components/Tabs\";\nimport Tab from \"./components/Tab\";\nimport \"./App.css\";\n\nconst App = () => (\n  <>\n    <h1>Accessible Tab Groups</h1>\n    <h2>Fruits</h2>\n    <Tabs name=\"Fruits\">\n      <Tab label=\"Apple\">\n        <p>\n          An apple is an edible fruit produced by an apple tree. Apple trees are\n          cultivated worldwide and are the most widely grown species in the\n          genus Malus.\n        </p>\n      </Tab>\n      <Tab label=\"Banana\">\n        <p>Tab content Banana</p>\n      </Tab>\n      <Tab label=\"Grape\">\n        <p>Tab content Grape</p>\n      </Tab>\n    </Tabs>\n    <h2>Animals</h2>\n    <Tabs name=\"Animals\">\n      <Tab label=\"Cat\">\n        <p>\n          The cat is a domestic species of small carnivorous mammal. It is the\n          only domesticated species in the family Felidae and is often referred\n          to as the domestic cat to distinguish it from the wild members of the\n          family.\n        </p>\n      </Tab>\n      <Tab label=\"Dog\">\n        <p>Tab content Dog</p>\n      </Tab>\n    </Tabs>\n  </>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}